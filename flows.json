[
    {
        "id": "175e45cc065c1dbf",
        "type": "tab",
        "label": "sensores",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0989bce539abecb2",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "47c9fdc27cccf721",
        "type": "subflow",
        "name": "modbus temperatura",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "b4a42ebe614c8486"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 120,
                "wires": [
                    {
                        "id": "1a19b53230fd6e71",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "Comando Modbus",
            "version": "1.0.0",
            "author": "guioba@gmail.com",
            "desc": "Monta comando modbus",
            "keywords": "modbus"
        },
        "color": "#DDAA99",
        "icon": "font-awesome/fa-window-restore"
    },
    {
        "id": "5df8b89e0aa366e4",
        "type": "subflow",
        "name": "temperatura",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "81b61a67e0b6a3dc"
                    },
                    {
                        "id": "07728ab744bf4b13"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 340,
                "wires": [
                    {
                        "id": "d1d7e50e59711dd0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "id sensor"
        ]
    },
    {
        "id": "a56eeb4f457b4c51",
        "type": "subflow",
        "name": "estado",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "4897030e40dad08a"
                    },
                    {
                        "id": "4dca80c0f9420a9c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 220,
                "wires": [
                    {
                        "id": "dc94b9bb792fc353",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "id sensor"
        ]
    },
    {
        "id": "7edd80282373f2e7",
        "type": "subflow",
        "name": "alerta",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "5629be2462995a64"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0fb07bfed74cd45c",
        "type": "subflow",
        "name": "destinatarios",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "e0527f1e0b10bba7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 180,
                "wires": [
                    {
                        "id": "4a24810a7c9d50d9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "msg"
        ]
    },
    {
        "id": "2722588f55eaad40",
        "type": "subflow",
        "name": "log",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 400,
                "wires": [
                    {
                        "id": "892dd0a7f8b6213f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "946076b95db9179f",
        "type": "subflow",
        "name": "intervalo captura",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "2b462676221def16"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 400,
                "wires": [
                    {
                        "id": "66999e798690a174",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bed45c9821a13e16",
        "type": "subflow",
        "name": "intervalo abertura",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "39538305d927bf0c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1040,
                "y": 360,
                "wires": [
                    {
                        "id": "81cb997ab6036ea6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "851357ed231cc526",
        "type": "subflow",
        "name": "intervalo mensagem",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "9b3838959c49f93a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 200,
                "wires": [
                    {
                        "id": "1d4479a4c45a69bb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0ec016be138128f8",
        "type": "subflow",
        "name": "dados sensor temperatura",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "4160f794af1ac427"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 120,
                "wires": [
                    {
                        "id": "77cd851ebe64c7ae",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "14adb3fc7046a327",
        "type": "subflow",
        "name": "dados sensor estado",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "b76b046e4653fecc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 120,
                "wires": [
                    {
                        "id": "42cc80bea5ad098c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b0773837fc14de1b",
        "type": "subflow",
        "name": "modbus estado",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "e22a638f379960be"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 120,
                "wires": [
                    {
                        "id": "72917c56adfba2db",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "id sensor"
        ],
        "outputLabels": [
            "leitura sensor"
        ]
    },
    {
        "id": "56c1f937ef64cc10",
        "type": "subflow",
        "name": "intervalo degelo",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "3d30452d04caf6c3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 340,
                "wires": [
                    {
                        "id": "e0dd036c5f8d066b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "523d09ab802b2070",
        "type": "subflow",
        "name": "exclui arquivo log",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "7326a8034fa245c1"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1c63e2b83121f13b",
        "type": "subflow",
        "name": "contador",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "601c0f65f9c1d16c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 340,
                "wires": [
                    {
                        "id": "a4dbb28129ddb1c6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "5e38543dc4d6a5c8",
        "type": "subflow",
        "name": "reset qtd mensagens",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "b20a2c84c80c2b23"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6cf12492cbc96213",
        "type": "subflow",
        "name": "mensagem whatsapp",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "e58ff59d77951ada"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b941b6f4ae201e03",
        "type": "subflow",
        "name": "atualiza time abertura",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "14f4405309a9f991"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b98a8e718342971b",
        "type": "subflow",
        "name": "atualiza time degelo",
        "info": "",
        "category": "observer",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "17e87dfb9b6b24eb"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "75e22aefb9727a1a",
        "type": "modbus-client",
        "name": "DVP-CONT",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.0.100",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "",
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "817a90276d2a87c0",
        "type": "tls-config",
        "name": "AWS_Certificados_Qualicarnes",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "2c46850a8897f6172c95eae74d9cd056ef04e4a00712c55974dee009b919bd39-certificate.pem.crt",
        "keyname": "2c46850a8897f6172c95eae74d9cd056ef04e4a00712c55974dee009b919bd39-private.pem.key",
        "caname": "AmazonRootCA1.pem",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "412de3d7f9d7f41f",
        "type": "modbus-client",
        "name": "DVP-RTU",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "COM4",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "",
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 100,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "55722ecf9c54dc62",
        "type": "modbus-client",
        "name": "Conversor RS485/Wifi - RPI01",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.15.10",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "4860290cb47fbd8e",
        "type": "modbus-client",
        "name": "modbus TCP client",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.10",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": false,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "3d702d021977e188",
        "type": "modbus-client",
        "name": "WS-PORT",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.0.101",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 202,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "70269c07f73502c1",
        "type": "modbus-client",
        "name": "DVP-TCP-2",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.0.100",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "",
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "a233c28337dd1ac2",
        "type": "tls-config",
        "name": "AWS_Certificados_Guioba",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "8f428360f60205d5fbcf72ce5ca4a087c6942e848bc3da8e36d67660d75c24a6-certificate.pem.crt",
        "keyname": "8f428360f60205d5fbcf72ce5ca4a087c6942e848bc3da8e36d67660d75c24a6-private.pem.key",
        "caname": "AmazonRootCA1.pem",
        "servername": "AWS_MQTT",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "12db8551e7452c8f",
        "type": "tls-config",
        "name": "AWS-Certificados-Observer",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "3d0b1483d57219bb82fdc575198fb8bcb3d5dfde5ca8031af9734922b04ec45d-certificate.pem.crt",
        "keyname": "3d0b1483d57219bb82fdc575198fb8bcb3d5dfde5ca8031af9734922b04ec45d-private.pem.key",
        "caname": "AmazonRootCA1.pem",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "32abf8bf367dc74b",
        "type": "mqtt-broker",
        "name": "AWS-Mqtt-Observer",
        "broker": "a3lmvapjq513fp-ats.iot.us-east-1.amazonaws.com",
        "port": "8883",
        "tls": "12db8551e7452c8f",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "69ba5e36ae0a71cf",
        "type": "mqtt-broker",
        "name": "AWS_Mqtt_Qualicarnes",
        "broker": "a11kau81c7riu1-ats.iot.us-east-1.amazonaws.com",
        "port": "8883",
        "tls": "817a90276d2a87c0",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a2f7e16daf38ec3f",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "iotQualicarnes01",
        "name": "Local-InfluxDB",
        "usetls": false,
        "tls": "12db8551e7452c8f",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "cea2d7115083e519",
        "type": "tls-config",
        "name": "AWS_Certificados_Qualicarnes",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "2c46850a8897f6172c95eae74d9cd056ef04e4a00712c55974dee009b919bd39-certificate.pem.crt",
        "keyname": "2c46850a8897f6172c95eae74d9cd056ef04e4a00712c55974dee009b919bd39-private.pem.key",
        "caname": "AmazonRootCA1.pem",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "ced18875.cf10b8",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "d50a12c0d70ca353",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.15.5",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "1a36bee8bbd26b61",
        "type": "modbus-client",
        "z": "47c9fdc27cccf721",
        "name": "RTU-USB",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "90ba3b21421e2cb8",
        "type": "influxdb",
        "hostname": "10.0.1.236",
        "port": "8086",
        "protocol": "http",
        "database": "iotQualicarnes01",
        "name": "AWS-InfluxDB-Qualicarnes-01",
        "usetls": false,
        "tls": "cea2d7115083e519",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "48edfa96e63bb2ec",
        "type": "influxdb",
        "hostname": "10.0.1.236",
        "port": "8086",
        "protocol": "http",
        "database": "iotQualicarnes02",
        "name": "AWS-InfluxDB-Qualicarnes-02",
        "usetls": false,
        "tls": "cea2d7115083e519",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "b0493664.35a528",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "Testing",
        "name": "",
        "usetls": false,
        "tls": "ced18875.cf10b8",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "315c5d3a49af5990",
        "type": "split",
        "z": "47c9fdc27cccf721",
        "name": "um payload para cada sensor",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "298c0870cab32044"
            ]
        ]
    },
    {
        "id": "b4a42ebe614c8486",
        "type": "file in",
        "z": "47c9fdc27cccf721",
        "name": "",
        "filename": "/home/guioba/qualicarnes/config/.sensor_temperatura.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "91858734c5fb163c"
            ]
        ]
    },
    {
        "id": "91858734c5fb163c",
        "type": "json",
        "z": "47c9fdc27cccf721",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 610,
        "y": 60,
        "wires": [
            [
                "315c5d3a49af5990"
            ]
        ]
    },
    {
        "id": "298c0870cab32044",
        "type": "switch",
        "z": "47c9fdc27cccf721",
        "name": "seleciona sensor",
        "property": "topic.id_sensor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "payload.id_sensor",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "cf83f9e93a2aed71"
            ]
        ]
    },
    {
        "id": "cf83f9e93a2aed71",
        "type": "function",
        "z": "47c9fdc27cccf721",
        "name": "comando modbus",
        "func": "let dadosTopic = {};\n\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'tipo_sensor': msg.payload.tipo_sensor,\n    'local_sensor': msg.payload.local_sensor\n}\n\nmsg.payload = {\n    \"value\": 0,\n    \"fc\": msg.payload.fc,\n    \"unitid\": msg.payload.unitid,\n    \"address\": msg.payload.address,\n    \"quantity\": 1\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "1a19b53230fd6e71"
            ]
        ]
    },
    {
        "id": "1a19b53230fd6e71",
        "type": "modbus-flex-getter",
        "z": "47c9fdc27cccf721",
        "name": "modbus leitura",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "d50a12c0d70ca353",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 640,
        "y": 120,
        "wires": [
            [
                "da4adf96247c1298"
            ],
            []
        ]
    },
    {
        "id": "da4adf96247c1298",
        "type": "function",
        "z": "47c9fdc27cccf721",
        "name": "id_msg = 99",
        "func": "let leituraAtual = msg.payload[0];\nlet msgErro = 'leitura=' + leituraAtual; \n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "81b61a67e0b6a3dc",
        "type": "subflow:47c9fdc27cccf721",
        "z": "5df8b89e0aa366e4",
        "name": "",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "834b5a9f92610db4"
            ]
        ]
    },
    {
        "id": "834b5a9f92610db4",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "calcula temperatura atual",
        "func": "let idSensor = msg.topic.id_sensor;\nlet leituraAtual = msg.payload[0];\nlet tempAtual;\n\nif (leituraAtual >= 10000 && leituraAtual < 65535) {\n    tempAtual = (leituraAtual - 10000) / 10 * (-1);\n} else {\n    if (leituraAtual < 10000) {\n        tempAtual = leituraAtual / 10;\n    } else {\n        tempAtual = 99;\n    }\n}\n\nmsg.payload = {\n    \"valor_temperatura\": tempAtual\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 160,
        "wires": [
            [
                "47149091463860b3"
            ]
        ]
    },
    {
        "id": "47149091463860b3",
        "type": "subflow:0ec016be138128f8",
        "z": "5df8b89e0aa366e4",
        "name": "",
        "x": 710,
        "y": 160,
        "wires": [
            [
                "59d09068c741897a"
            ]
        ]
    },
    {
        "id": "c899cbf76c64e5e8",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "id_msg = 01",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 1\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 40,
        "wires": []
    },
    {
        "id": "59d09068c741897a",
        "type": "switch",
        "z": "5df8b89e0aa366e4",
        "name": "sensor com defeito?",
        "property": "payload.valor_temperatura",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "99",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "99",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 220,
        "wires": [
            [
                "045ba2558a45ac02"
            ],
            [
                "1afb85e7c8cd248f",
                "d1d7e50e59711dd0",
                "c063f9ac26ec1941"
            ]
        ]
    },
    {
        "id": "045ba2558a45ac02",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "id_msg = 03",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 3\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "1afb85e7c8cd248f",
        "type": "switch",
        "z": "5df8b89e0aa366e4",
        "name": "temp atual atingiu temp maxima ?",
        "property": "payload.valor_temperatura",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.temperatura_maxima",
                "vt": "msg"
            },
            {
                "t": "lt",
                "v": "payload.temperatura_maxima",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 540,
        "y": 280,
        "wires": [
            [
                "512c173ece92033e",
                "f948f72f8bf26e67"
            ],
            [
                "8d69ad350e722e39"
            ]
        ]
    },
    {
        "id": "c063f9ac26ec1941",
        "type": "switch",
        "z": "5df8b89e0aa366e4",
        "d": true,
        "name": "sensor degelo ?",
        "property": "payload.degelo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "S",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 400,
        "wires": [
            [
                "4dda93829fc7a0e7"
            ]
        ]
    },
    {
        "id": "d1d7e50e59711dd0",
        "type": "change",
        "z": "5df8b89e0aa366e4",
        "name": "prepara saida",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.topico_mqtt",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.topico_mqtt",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.temperatura_maxima",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.degelo",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.intervalo_maximo_degelo",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "512c173ece92033e",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "id_msg = 02",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 2\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 280,
        "wires": []
    },
    {
        "id": "4dda93829fc7a0e7",
        "type": "switch",
        "z": "5df8b89e0aa366e4",
        "name": "temp atual > 15 ?",
        "property": "payload.valor_temperatura",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "15",
                "vt": "num"
            },
            {
                "t": "lte",
                "v": "15",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "849268e2b2ea0bfd",
                "6dd664e45118587f"
            ],
            [
                "7f7b4583afba6924"
            ]
        ]
    },
    {
        "id": "7f7b4583afba6924",
        "type": "subflow:56c1f937ef64cc10",
        "z": "5df8b89e0aa366e4",
        "name": "",
        "x": 480,
        "y": 520,
        "wires": [
            [
                "a5f6e1e288ecbed6"
            ]
        ]
    },
    {
        "id": "a5f6e1e288ecbed6",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "id_msg = 04",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 4\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 520,
        "wires": []
    },
    {
        "id": "a9a3e5983c34626d",
        "type": "subflow:946076b95db9179f",
        "z": "5df8b89e0aa366e4",
        "name": "",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "c899cbf76c64e5e8"
            ]
        ]
    },
    {
        "id": "f948f72f8bf26e67",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "id_msg = 99",
        "func": "let msgErro = 'valor temperatura=' + msg.payload.valor_temperatura + ', temperatura maxima=' + msg.payload.temperatura_maxima + ', temperatura acima do normal.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "8d69ad350e722e39",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "id_msg = 99",
        "func": "let msgErro = 'valor temperatura=' + msg.payload.valor_temperatura + ', temperatura maxima=' + msg.payload.temperatura_maxima + ', temperatura normal.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "849268e2b2ea0bfd",
        "type": "function",
        "z": "5df8b89e0aa366e4",
        "name": "id_msg = 99",
        "func": "let msgErro = 'efetuando degelo.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 400,
        "wires": []
    },
    {
        "id": "07728ab744bf4b13",
        "type": "subflow:0ec016be138128f8",
        "z": "5df8b89e0aa366e4",
        "name": "",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "a9a3e5983c34626d"
            ]
        ]
    },
    {
        "id": "6dd664e45118587f",
        "type": "subflow:b98a8e718342971b",
        "z": "5df8b89e0aa366e4",
        "name": "",
        "x": 780,
        "y": 460,
        "wires": []
    },
    {
        "id": "caaf5110c3a1d2b7",
        "type": "function",
        "z": "a56eeb4f457b4c51",
        "name": "recupera estado anterior e obtém estado atual",
        "func": "let idSensor = msg.topic.id_sensor;\nlet leituraAtual = msg.payload[0];\nlet estAnt;\nlet estAtual = 0;\nlet varGlobalEst = 'estadoAnterior' + idSensor;\nlet varGlobalIniSensor = 'inicializaSensor' + idSensor;\nlet iniSensor = global.get(varGlobalIniSensor) || 0;\n\nif (leituraAtual == true) {\n    estAtual = 1;\n}\n\nif (iniSensor == 0) {\n    if ( estAtual == 0 ) {\n        estAnt = 1;\n    }\n    if (estAtual == 1) {\n        estAnt = 0;\n    }\n    global.set(varGlobalIniSensor, 1);\n} else {\n    estAnt = global.get(varGlobalEst) || 0;\n}\n\nglobal.set(varGlobalEst, estAtual);\n\nmsg.payload = {\n    'estado_anterior': estAnt,\n    'valor_estado': estAtual\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 160,
        "wires": [
            [
                "b36b5dd2bd881fef"
            ]
        ]
    },
    {
        "id": "57b3ce0360d10149",
        "type": "switch",
        "z": "a56eeb4f457b4c51",
        "name": "estado atual != estado anterior ?",
        "property": "payload.valor_estado",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "payload.estado_anterior",
                "vt": "msg"
            },
            {
                "t": "eq",
                "v": "payload.estado_anterior",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "23e674360d9d3a6a",
                "dc94b9bb792fc353"
            ],
            [
                "1b2ce90ed10e801f"
            ]
        ]
    },
    {
        "id": "1b2ce90ed10e801f",
        "type": "switch",
        "z": "a56eeb4f457b4c51",
        "name": "porta continua aberta ?",
        "property": "payload.valor_estado",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "f6cb8115eb19e440",
                "dee871f57be8c638"
            ],
            [
                "028dd1ea19caad18"
            ]
        ]
    },
    {
        "id": "51f0e66a1532e2ce",
        "type": "subflow:946076b95db9179f",
        "z": "a56eeb4f457b4c51",
        "name": "",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "be5ca90f9cbfda02"
            ]
        ]
    },
    {
        "id": "f6cb8115eb19e440",
        "type": "subflow:bed45c9821a13e16",
        "z": "a56eeb4f457b4c51",
        "name": "",
        "x": 750,
        "y": 480,
        "wires": [
            [
                "4de03f0e1c90e8b3"
            ]
        ]
    },
    {
        "id": "dc94b9bb792fc353",
        "type": "change",
        "z": "a56eeb4f457b4c51",
        "name": "prepara saida",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.topico_mqtt",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.topico_mqtt",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.tempo_maximo_abertura",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.estado_anterior",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b36b5dd2bd881fef",
        "type": "subflow:14adb3fc7046a327",
        "z": "a56eeb4f457b4c51",
        "name": "",
        "x": 820,
        "y": 160,
        "wires": [
            [
                "57b3ce0360d10149"
            ]
        ]
    },
    {
        "id": "4897030e40dad08a",
        "type": "subflow:b0773837fc14de1b",
        "z": "a56eeb4f457b4c51",
        "name": "",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "caaf5110c3a1d2b7"
            ]
        ]
    },
    {
        "id": "be5ca90f9cbfda02",
        "type": "function",
        "z": "a56eeb4f457b4c51",
        "name": "id_msg = 01",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 1\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 40,
        "wires": []
    },
    {
        "id": "23e674360d9d3a6a",
        "type": "switch",
        "z": "a56eeb4f457b4c51",
        "name": "porta abriu ?",
        "property": "payload.valor_estado",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "c5db720fc4da4051",
                "95f86f1e4ab9f3b4"
            ],
            [
                "0b5fd4c65dc26d86"
            ]
        ]
    },
    {
        "id": "c5db720fc4da4051",
        "type": "function",
        "z": "a56eeb4f457b4c51",
        "name": "id_msg = 99",
        "func": "let msgErro = 'valor estado=' + msg.payload.valor_estado + ', valor estado anterior=' + msg.payload.estado_anterior + ', porta abriu.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "0b5fd4c65dc26d86",
        "type": "function",
        "z": "a56eeb4f457b4c51",
        "name": "id_msg = 99",
        "func": "let msgErro = 'valor estado=' + msg.payload.valor_estado + ', valor estado anterior=' + msg.payload.estado_anterior + ', porta fechou.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 400,
        "wires": []
    },
    {
        "id": "dee871f57be8c638",
        "type": "function",
        "z": "a56eeb4f457b4c51",
        "name": "id_msg = 99",
        "func": "let msgErro = 'valor estado=' + msg.payload.valor_estado + ', valor estado anterior=' + msg.payload.estado_anterior + ', porta continua aberta.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": []
    },
    {
        "id": "028dd1ea19caad18",
        "type": "function",
        "z": "a56eeb4f457b4c51",
        "name": "id_msg = 99",
        "func": "let msgErro = 'valor estado=' + msg.payload.valor_estado + ', valor estado anterior=' + msg.payload.estado_anterior + ', porta continua fechada.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "4dca80c0f9420a9c",
        "type": "subflow:14adb3fc7046a327",
        "z": "a56eeb4f457b4c51",
        "name": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "51f0e66a1532e2ce"
            ]
        ]
    },
    {
        "id": "95f86f1e4ab9f3b4",
        "type": "subflow:b941b6f4ae201e03",
        "z": "a56eeb4f457b4c51",
        "name": "",
        "x": 760,
        "y": 340,
        "wires": []
    },
    {
        "id": "4de03f0e1c90e8b3",
        "type": "function",
        "z": "a56eeb4f457b4c51",
        "name": "id_msg = 05",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 5\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 480,
        "wires": []
    },
    {
        "id": "9d38ea029a7bf352",
        "type": "function",
        "z": "7edd80282373f2e7",
        "name": "01 - captura de dados",
        "func": "let msgWhatsapp = msg.payload.empresa + ': Sensor de ' + msg.payload.tipo_sensor + ' _*' + msg.payload.local_sensor + '*_ está sem capturar dados há _*' + msg.payload.tempo_decorrido_captura_string + '*_.(' + msg.payload.qtd_msg_atual + ')';\nlet url = 'https://api.callmebot.com/whatsapp.php?';\nlet dadosTopic = {};\n\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'fone': msg.payload.fone,\n    'mensagem_whatsapp': msgWhatsapp \n}\n\nmsg.url = url + 'phone=+' + msg.payload.fone + '&apikey=' + msg.payload.chave + '&text=' + msgWhatsapp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 40,
        "wires": [
            [
                "aae8b4209b49d8b0"
            ]
        ]
    },
    {
        "id": "013f1a7d724e6564",
        "type": "function",
        "z": "7edd80282373f2e7",
        "name": "05 - abertura de porta",
        "func": "let msgWhatsapp = msg.payload.empresa + ': _*' + msg.payload.local_sensor + '*_ está aberta há _*' + msg.payload.tempo_decorrido_abertura_string + '*_.(' + msg.payload.qtd_msg_atual + ')';\nlet url = 'https://api.callmebot.com/whatsapp.php?';\nlet dadosTopic = {};\n\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'fone': msg.payload.fone,\n    'mensagem_whatsapp': msgWhatsapp \n}\n\nmsg.url = url + 'phone=' + msg.payload.fone + '&text=' + msgWhatsapp + '&apikey=' + msg.payload.chave;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 280,
        "wires": [
            [
                "aae8b4209b49d8b0"
            ]
        ]
    },
    {
        "id": "29c871e9256cedd2",
        "type": "function",
        "z": "7edd80282373f2e7",
        "name": "02 - temperatura máxima",
        "func": "let msgWhatsapp = msg.payload.empresa + ':_*' + msg.payload.local_sensor + '*_ excedeu o limite máximo de temperatura(' + msg.payload.temperatura_maxima + 'ºC): _*' + msg.payload.valor_temperatura + 'ºC*_.(' + msg.payload.qtd_msg_atual + ')';\nlet url = 'https://api.callmebot.com/whatsapp.php?';\nlet dadosTopic = {};\n\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'fone': msg.payload.fone,\n    'mensagem_whatsapp': msgWhatsapp \n}\n\nmsg.url = url + 'phone=' + msg.payload.fone + '&text=' + msgWhatsapp + '&apikey=' + msg.payload.chave;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 100,
        "wires": [
            [
                "aae8b4209b49d8b0"
            ]
        ]
    },
    {
        "id": "0fb4a02fb4fd8c08",
        "type": "function",
        "z": "7edd80282373f2e7",
        "name": "03 - defeito ou desligado",
        "func": "let msgWhatsapp = msg.payload.empresa + ': Sensor de ' + msg.payload.tipo_sensor + ' _*' + msg.payload.local_sensor + '*_ com defeito ou desligado.(' + msg.payload.qtd_msg_atual + ')';\nlet url = 'https://api.callmebot.com/whatsapp.php?';\nlet dadosTopic = {};\n\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'fone': msg.payload.fone,\n    'mensagem_whatsapp': msgWhatsapp \n}\n\nmsg.url = url + 'phone=' + msg.payload.fone + '&text=' + msgWhatsapp + '&apikey=' + msg.payload.chave;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 160,
        "wires": [
            [
                "aae8b4209b49d8b0"
            ]
        ]
    },
    {
        "id": "8635d58bf046807a",
        "type": "subflow:0fb07bfed74cd45c",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 650,
        "y": 40,
        "wires": [
            [
                "9d38ea029a7bf352"
            ]
        ]
    },
    {
        "id": "5629be2462995a64",
        "type": "switch",
        "z": "7edd80282373f2e7",
        "name": "id_mensagem",
        "property": "topic.id_mensagem",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "01",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "02",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "03",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "04",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "05",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 180,
        "y": 160,
        "wires": [
            [
                "c03ab93d143765da"
            ],
            [
                "7c7dcf69724cfc12"
            ],
            [
                "3b9c01fae36b6ada"
            ],
            [
                "7bdc52f16bca1639"
            ],
            [
                "bf408c039227d040"
            ]
        ]
    },
    {
        "id": "c03ab93d143765da",
        "type": "subflow:851357ed231cc526",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 440,
        "y": 40,
        "wires": [
            [
                "8635d58bf046807a"
            ]
        ]
    },
    {
        "id": "7bdc52f16bca1639",
        "type": "subflow:851357ed231cc526",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 440,
        "y": 220,
        "wires": [
            [
                "c9e48e8bfd75782e"
            ]
        ]
    },
    {
        "id": "86f91c3a07313fcd",
        "type": "function",
        "z": "7edd80282373f2e7",
        "name": "04 - degelo",
        "func": "let msgWhatsapp = msg.payload.empresa + ':Câmara _*' + msg.payload.local_sensor + '*_ está sem efetuar degelo há _*' + msg.payload.tempo_decorrido_degelo_string + '*_.(' + msg.payload.qtd_msg_atual + ')';\nlet url = 'https://api.callmebot.com/whatsapp.php?';\nlet dadosTopic = {};\n\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'fone': msg.payload.fone,\n    'mensagem_whatsapp': msgWhatsapp \n}\n\nmsg.url = url + 'phone=' + msg.payload.fone + '&text=' + msgWhatsapp + '&apikey=' + msg.payload.chave;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 220,
        "wires": [
            [
                "aae8b4209b49d8b0"
            ]
        ]
    },
    {
        "id": "c9e48e8bfd75782e",
        "type": "subflow:0fb07bfed74cd45c",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "86f91c3a07313fcd"
            ]
        ]
    },
    {
        "id": "ce3dae525355749f",
        "type": "subflow:0fb07bfed74cd45c",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 650,
        "y": 100,
        "wires": [
            [
                "29c871e9256cedd2"
            ]
        ]
    },
    {
        "id": "7c7dcf69724cfc12",
        "type": "subflow:851357ed231cc526",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 440,
        "y": 100,
        "wires": [
            [
                "ce3dae525355749f"
            ]
        ]
    },
    {
        "id": "a2d7644c8b607ea6",
        "type": "subflow:0fb07bfed74cd45c",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "0fb4a02fb4fd8c08"
            ]
        ]
    },
    {
        "id": "3b9c01fae36b6ada",
        "type": "subflow:851357ed231cc526",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 440,
        "y": 160,
        "wires": [
            [
                "a2d7644c8b607ea6"
            ]
        ]
    },
    {
        "id": "81780f3f0228bfe6",
        "type": "subflow:0fb07bfed74cd45c",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 650,
        "y": 280,
        "wires": [
            [
                "013f1a7d724e6564"
            ]
        ]
    },
    {
        "id": "bf408c039227d040",
        "type": "subflow:851357ed231cc526",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 440,
        "y": 280,
        "wires": [
            [
                "81780f3f0228bfe6"
            ]
        ]
    },
    {
        "id": "aae8b4209b49d8b0",
        "type": "subflow:6cf12492cbc96213",
        "z": "7edd80282373f2e7",
        "name": "",
        "x": 1140,
        "y": 160,
        "wires": []
    },
    {
        "id": "e0527f1e0b10bba7",
        "type": "function",
        "z": "0fb07bfed74cd45c",
        "name": "guarda payload",
        "func": "msg.topic = {\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 60,
        "wires": [
            [
                "0a2e620102f0caa7"
            ]
        ]
    },
    {
        "id": "e093e08de27a3c18",
        "type": "function",
        "z": "0fb07bfed74cd45c",
        "name": "recupera payload",
        "func": "let dadosTopic = {} \ndadosTopic = msg.topic;\nmsg.payload = {\n    ...dadosTopic,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 120,
        "wires": [
            [
                "f13b80952167a340"
            ]
        ]
    },
    {
        "id": "0a2e620102f0caa7",
        "type": "file in",
        "z": "0fb07bfed74cd45c",
        "name": "le dados de destinatarios",
        "filename": "/home/guioba/qualicarnes/config/.user.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "4c04921842a8150d"
            ]
        ]
    },
    {
        "id": "f13b80952167a340",
        "type": "switch",
        "z": "0fb07bfed74cd45c",
        "name": "filtra destinatarios",
        "property": "payload.nivel_usuario",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "payload.niv_msg",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "4a24810a7c9d50d9"
            ]
        ]
    },
    {
        "id": "4c04921842a8150d",
        "type": "json",
        "z": "0fb07bfed74cd45c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 170,
        "y": 120,
        "wires": [
            [
                "d94840e034f678a1"
            ]
        ]
    },
    {
        "id": "d94840e034f678a1",
        "type": "split",
        "z": "0fb07bfed74cd45c",
        "name": "um payload para cada destinatario",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 400,
        "y": 120,
        "wires": [
            [
                "e093e08de27a3c18"
            ]
        ]
    },
    {
        "id": "4a24810a7c9d50d9",
        "type": "delay",
        "z": "0fb07bfed74cd45c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8a7ecdfe0d519d56",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "02 - limite de valor de temperatura ultrapassado",
        "func": "msg.payload = {\n    //formato msg: 'idSensor; tipoSensor; localSensor; msg'\n    'msg_ocorrencia': msg.topic.id_sensor + '-' + msg.payload.local_sensor + ', excedeu o limite máximo de temperatura(' + msg.payload.temperatura_maxima + 'ºC): ' + msg.payload.valor_temperatura + 'ºC.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 100,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "7cfe6f654055d823",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "05 - limite de tempo de porta aberta ultrapassado",
        "func": "msg.payload = {\n    //formato msg: 'idSensor; tipoSensor; localSensor; msg'\n    'msg_ocorrencia': msg.topic.id_sensor + '-' + msg.payload.local_sensor + ', está aberta há ' + msg.payload.tempo_decorrido_abertura_string + '.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 280,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "c3fd34ff01b116e3",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "01 - limite de tempo sem captura de dados ultrapassado ",
        "func": "msg.payload = {\n    //formato msg: 'idSensor; tipoSensor; localSensor; msg'\n    'msg_ocorrencia': msg.topic.id_sensor + '-' + msg.payload.local_sensor + ', está sem capturar dados há mais de ' + msg.payload.tempo_decorrido_captura_string + '.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 40,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "49a84e69eab7a96e",
        "type": "switch",
        "z": "2722588f55eaad40",
        "name": "id mensagem",
        "property": "topic.id_mensagem",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "01",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "02",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "03",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "04",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "05",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "90",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "91",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "92",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "93",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "94",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "95",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "96",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "97",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "99",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 14,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "c3fd34ff01b116e3",
                "324f9a15ccb55afc"
            ],
            [
                "8a7ecdfe0d519d56",
                "324f9a15ccb55afc"
            ],
            [
                "c31ff9dd6e543184",
                "324f9a15ccb55afc"
            ],
            [
                "7c258feb61e4f4c8",
                "324f9a15ccb55afc"
            ],
            [
                "7cfe6f654055d823",
                "324f9a15ccb55afc"
            ],
            [
                "05bd71e30fa63697"
            ],
            [
                "e791410ed08f9986"
            ],
            [
                "ba91c077028aa062"
            ],
            [
                "4f29c24a1f7e2a95"
            ],
            [
                "d0e55c6f109dcebd"
            ],
            [
                "ab74375b21ef2f07"
            ],
            [
                "383edd70878fc13a"
            ],
            [
                "270ed3d564503b33"
            ],
            [
                "14b3f01b8e8626b5"
            ]
        ]
    },
    {
        "id": "c31ff9dd6e543184",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "03 - sensor com defeito ou desligado",
        "func": "msg.payload = {\n    //formato msg: 'idSensor; tipoSensor; localSensor; msg'\n    'msg_ocorrencia': msg.topic.id_sensor + '-' + msg.payload.local_sensor + ', com defeito ou desligado.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 160,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "05bd71e30fa63697",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "90 - erro de execucao de fluxo",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'erro fluxo ' + msg.topic.nome_fluxo  + ', no ' + msg.topic.nome_no + ', ' + msg.topic.msg_erro + '.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 340,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "892dd0a7f8b6213f",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "seleciona arquivos de log por data",
        "func": "let data = new Date();\nlet dia = data.getDate().toString();\nlet diaF = (dia.length == 1) ? '0' + dia : dia;\nlet mes = (data.getMonth() + 1).toString();\nlet mesF = (mes.length == 1) ? '0' + mes : mes;\nlet anoF = data.getFullYear();\nlet nomeArquivoLogSistema = '/home/guioba/qualicarnes/log/log_' + anoF + mesF + diaF + '.txt';\nlet dadosTopic = {};\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'nome_arquivo_log': nomeArquivoLogSistema\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "49a84e69eab7a96e"
            ]
        ]
    },
    {
        "id": "7c258feb61e4f4c8",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "04 - limite de tempo sem degelo ultrapassado",
        "func": "msg.payload = {\n    //formato msg: 'idSensor; tipoSensor; localSensor; msg'\n    'msg_ocorrencia': msg.topic.id_sensor + '-' + msg.payload.local_sensor + ', está sem efetuar degelo há mais de ' + msg.payload.tempo_decorrido_degelo_string + '.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 220,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "e791410ed08f9986",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "91 - envio de mensagem",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'mensagem enviada para ' + msg.topic.fone + ' com sucesso.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 400,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "4f29c24a1f7e2a95",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "93 - exclusao de arquivo de log",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'arquivo de log ' + msg.topic.nome_arquivo_log + ' excluído com sucesso.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 520,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "d0e55c6f109dcebd",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "94 - erro de exclusao de arquivo de log",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'erro ao excluir o arquivo de log ' + msg.topic.nome_arquivo_log + '.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 580,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "54767293f9693f85",
        "type": "file",
        "z": "2722588f55eaad40",
        "name": "arquivo de log sistema",
        "filename": "topic.nome_arquivo_log",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1380,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "5e527f17a0a52bf3",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "prepara mensagem de log de sistema",
        "func": "let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\nlet timeLog = new Date();\n\nmsg.payload = timeLog + \";\" + msg.payload.msg_ocorrencia\nreturn msg;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 460,
        "wires": [
            [
                "54767293f9693f85"
            ],
            []
        ]
    },
    {
        "id": "ba91c077028aa062",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "92 - erro envio de mensagem",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'erro no envio da mensagem para ' + msg.topic.fone + '.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 460,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "ab74375b21ef2f07",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "95 - limite diario mensagens whatsapp ultrapassado",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'limite diário de mensagens whatsapp ultrapassado(' + msg.payload.qtd_msg_dia + ').'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 640,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "383edd70878fc13a",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "96 - reset qtd mensagens",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'zerada qtd mensagens whatsapp por dia - sensor ' + msg.topic.id_sensor + '.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 700,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "270ed3d564503b33",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "97 - inexistencia arquivo log",
        "func": "msg.payload = {\n    //formato msg: 'msg'\n    'msg_ocorrencia': 'nenhum arquivo de log a ser excluido.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 760,
        "wires": [
            [
                "5e527f17a0a52bf3"
            ]
        ]
    },
    {
        "id": "324f9a15ccb55afc",
        "type": "subflow:7edd80282373f2e7",
        "z": "2722588f55eaad40",
        "name": "",
        "x": 550,
        "y": 40,
        "wires": []
    },
    {
        "id": "cc4830f6671d2281",
        "type": "switch",
        "z": "2722588f55eaad40",
        "name": "detalhar log temperatura?",
        "property": "execLogDetalhadoTemperatura",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1030,
        "y": 820,
        "wires": [
            [
                "86d44fb16fa5976a"
            ]
        ]
    },
    {
        "id": "1151392338522026",
        "type": "switch",
        "z": "2722588f55eaad40",
        "name": "detalhar log estado?",
        "property": "execLogDetalhadoEstado",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1020,
        "y": 880,
        "wires": [
            [
                "86d44fb16fa5976a"
            ]
        ]
    },
    {
        "id": "86d44fb16fa5976a",
        "type": "function",
        "z": "2722588f55eaad40",
        "name": "prepara mensagem de log detalhado",
        "func": "let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\nlet timeLog = new Date();\n\nmsg.payload = timeLog + \";\" + msg.topic.id_sensor + '-' + msg.topic.local_sensor + ', ' + msg.error.message\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 580,
        "wires": [
            [
                "54767293f9693f85"
            ]
        ]
    },
    {
        "id": "14b3f01b8e8626b5",
        "type": "switch",
        "z": "2722588f55eaad40",
        "name": "tipo sensor?",
        "property": "topic.tipo_sensor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperatura",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "estado",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 820,
        "wires": [
            [
                "cc4830f6671d2281"
            ],
            [
                "1151392338522026"
            ]
        ]
    },
    {
        "id": "61068e8de8899618",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "calcula tempo decorrido sem captura de dados",
        "func": "let timesUltimaCaptura = msg.payload.time_captura;\nlet idMensagem = msg.payload.id_mensagem;\nlet timeAtual = new Date().getTime();\nlet milissegundos;\nlet minutos;\n\nmilissegundos = timeAtual - timesUltimaCaptura;\nminutos = Math.abs(Math.round(milissegundos / 60000));\n\nmsg.payload = {\n    ...msg.payload,\n    'time_atual': timeAtual,\n    'tempo_decorrido_captura': minutos\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 280,
        "wires": [
            [
                "4a1b0175cbf85f7d",
                "f7e862d301a3b3d4"
            ]
        ]
    },
    {
        "id": "4a1b0175cbf85f7d",
        "type": "switch",
        "z": "946076b95db9179f",
        "name": "tempo decorrido sem captura >= intervalo maximo sem captura",
        "property": "payload.tempo_decorrido_captura",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.intervalo_maximo_captura",
                "vt": "msg"
            },
            {
                "t": "lt",
                "v": "payload.intervalo_maximo_captura",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "d9ca4a348267c926",
                "c2db49f2fb4d9fc5"
            ],
            [
                "d05e9028eb73bc92"
            ]
        ]
    },
    {
        "id": "66999e798690a174",
        "type": "change",
        "z": "946076b95db9179f",
        "name": "prepara saida",
        "rules": [
            {
                "t": "delete",
                "p": "payload.time_captura",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.intervalo_maximo_captura",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "038b2351e5f6571f",
        "type": "json",
        "z": "946076b95db9179f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 170,
        "y": 220,
        "wires": [
            [
                "8465d5e05331e263"
            ]
        ]
    },
    {
        "id": "a67fa97b1a08200c",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "guarda payload",
        "func": "let idSensor = msg.topic.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivo = '/home/guioba/qualicarnes/config/.times_cap_sensor_' + idSensorF + '.json';\n\nmsg.topic = {\n    'id_sensor': msg.payload.id_sensor,\n    'tipo_sensor': msg.payload.tipo_sensor,\n    'local_sensor': msg.payload.local_sensor,\n    'intervalo_maximo_captura': msg.payload.intervalo_maximo_captura,\n    'nome_arquivo': nomeArquivo\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 100,
        "wires": [
            [
                "3f20136db163690a"
            ]
        ]
    },
    {
        "id": "8465d5e05331e263",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "recupera payload",
        "func": "let dadosTopic = {} \ndadosTopic = msg.topic;\n\nmsg.payload = {\n    ...dadosTopic,\n    'time_captura': msg.payload.time\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "61068e8de8899618"
            ]
        ]
    },
    {
        "id": "d9ca4a348267c926",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "converte tempo decorrido sem captura de dados",
        "func": "let tempoMinutos = msg.payload.tempo_decorrido_captura;\nlet minutos = 0;\nlet horas = 0;\nlet strMinutos = 'minuto';\nlet strHoras = 'hora';\nlet strTime;\n\nminutos = tempoMinutos % 60\nhoras = Math.floor(tempoMinutos / 60) \n\nif ( minutos > 1 ) {\n    strMinutos += 's';\n}\n\nif (horas > 1) {\n    strHoras += 's';\n}\n\nif ( tempoMinutos >= 60 ) {\n    if ( horas > 0) {\n        if ( minutos > 0) {\n            strTime = horas + ' ' + strHoras + ' e ' + minutos + ' ' + strMinutos;\n        } else {\n            strTime = horas + ' ' + strHoras;\n        }\n    } else {\n        strTime = minutos + ' ' + strMinutos;\n    }\n}  else {\n    strTime = tempoMinutos + ' ' + strMinutos;\n}\n\nmsg.payload = {\n    ...msg.payload,\n    'tempo_decorrido_captura_string': strTime\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 340,
        "wires": [
            [
                "66999e798690a174"
            ]
        ]
    },
    {
        "id": "3f20136db163690a",
        "type": "file in",
        "z": "946076b95db9179f",
        "name": "lê timestamp de captura de dados",
        "filename": "topic.nome_arquivo",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "038b2351e5f6571f"
            ]
        ]
    },
    {
        "id": "c2db49f2fb4d9fc5",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo captura=' + msg.payload.tempo_decorrido_captura + 'min, tempo limite captura=' + msg.payload.intervalo_maximo_captura + 'min, tempo limite captura ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "d05e9028eb73bc92",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo captura=' + msg.payload.tempo_decorrido_captura + 'min, tempo limite captura=' + msg.payload.intervalo_maximo_captura + 'min, tempo limite captura nao ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 460,
        "wires": []
    },
    {
        "id": "f7e862d301a3b3d4",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "gera timestamp de captura de dados",
        "func": "let objTime = {\n    'time': msg.payload.time_atual\n}\n\nmsg.payload = objTime;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "e9fd9750d92974a5"
            ]
        ]
    },
    {
        "id": "e9fd9750d92974a5",
        "type": "file",
        "z": "946076b95db9179f",
        "name": "atualiza timestamp de captura de dados",
        "filename": "topic.nome_arquivo",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 700,
        "y": 160,
        "wires": [
            [
                "c006c6c3bc7ca3e6"
            ]
        ]
    },
    {
        "id": "c006c6c3bc7ca3e6",
        "type": "function",
        "z": "946076b95db9179f",
        "name": "id_msg = 99",
        "func": "let msgErro = 'time captura atualizado';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "2b462676221def16",
        "type": "change",
        "z": "946076b95db9179f",
        "name": "intervalo maximo sem captura de dados = 60min",
        "rules": [
            {
                "t": "set",
                "p": "payload.intervalo_maximo_captura",
                "pt": "msg",
                "to": "60",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 40,
        "wires": [
            [
                "a67fa97b1a08200c"
            ]
        ]
    },
    {
        "id": "81cb997ab6036ea6",
        "type": "change",
        "z": "bed45c9821a13e16",
        "name": "prepara saida",
        "rules": [
            {
                "t": "delete",
                "p": "payload.time_abertura",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "tempo_decorrido_abertura",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.tempo_maximo_abertura",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "39538305d927bf0c",
        "type": "function",
        "z": "bed45c9821a13e16",
        "name": "guarda payload",
        "func": "let idSensor = msg.topic.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivo = '/home/guioba/qualicarnes/config/.times_abert_sensor_' + idSensorF + '.json';\n\nmsg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'nome_arquivo': nomeArquivo,\n    'tempo_maximo_abertura': msg.topic.tempo_maximo_abertura,  \n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 60,
        "wires": [
            [
                "8da8ad8e886ffce9"
            ]
        ]
    },
    {
        "id": "8da8ad8e886ffce9",
        "type": "file in",
        "z": "bed45c9821a13e16",
        "name": "le timestamp de abertura de porta",
        "filename": "topic.nome_arquivo",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 460,
        "y": 60,
        "wires": [
            [
                "1c312b50ea339d8d"
            ]
        ]
    },
    {
        "id": "d14c3ba8b9764c0b",
        "type": "function",
        "z": "bed45c9821a13e16",
        "name": "calcula tempo decorrido de abertura de porta",
        "func": "let timesUltimaAbertura = msg.payload.time_abertura;\nlet idMensagem = msg.payload.id_mensagem;\nlet timeAtual = new Date().getTime();\nlet milissegundos;\nlet minutos;\n\nmilissegundos = timeAtual - timesUltimaAbertura;\nminutos = Math.abs(Math.round(milissegundos / 60000));\n\nmsg.topic = {\n    'id_sensor': msg.payload.id_sensor,\n    'tipo_sensor': msg.topic.tipo_sensor,\n    'local_sensor': msg.topic.local_sensor,\n    'id_mensagem': msg.payload.id_mensagem,\n    'nome_arquivo': msg.payload.nome_arquivo\n}\n\nmsg.payload = {\n    ...msg.payload,\n    'tempo_decorrido_abertura': minutos\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 240,
        "wires": [
            [
                "418b8e1b743d4b2d"
            ]
        ]
    },
    {
        "id": "418b8e1b743d4b2d",
        "type": "switch",
        "z": "bed45c9821a13e16",
        "name": "tempo decorrido de abertura >= tempo limite de bertura",
        "property": "payload.tempo_decorrido_abertura",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.tempo_maximo_abertura",
                "vt": "msg"
            },
            {
                "t": "lt",
                "v": "payload.tempo_maximo_abertura",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "24dc3924edc82365",
                "54b24106f46dc96a"
            ],
            [
                "126105716a89c7a0"
            ]
        ]
    },
    {
        "id": "1c312b50ea339d8d",
        "type": "json",
        "z": "bed45c9821a13e16",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "bf96a9b3a6b1113d"
            ]
        ]
    },
    {
        "id": "bf96a9b3a6b1113d",
        "type": "function",
        "z": "bed45c9821a13e16",
        "name": "recupera payload",
        "func": "let dadosTopic = {} \ndadosTopic = msg.topic;\n\nmsg.payload = {\n    ...dadosTopic,\n    'time_abertura': msg.payload.time,\n    'tempo_maximo_abertura': msg.topic.tempo_maximo_abertura\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "d14c3ba8b9764c0b"
            ]
        ]
    },
    {
        "id": "24dc3924edc82365",
        "type": "function",
        "z": "bed45c9821a13e16",
        "name": "converte tempo decorrido de abertura de porta",
        "func": "let tempoMinutos = msg.payload.tempo_decorrido_abertura;\nlet minutos = 0;\nlet horas = 0;\nlet strMinutos = 'minuto';\nlet strHoras = 'hora';\nlet strTime;\n\nminutos = tempoMinutos % 60\nhoras = Math.floor(tempoMinutos / 60) \n\nif ( minutos > 1 ) {\n    strMinutos += 's';\n}\n\nif ( horas > 1 ) {\n    strHoras += 's';\n}\n\nif ( tempoMinutos >= 60 ) {\n    if ( horas > 0) {\n        if ( minutos > 0) {\n            strTime = horas + ' ' + strHoras + ' e ' + minutos + ' ' + strMinutos;\n        } else {\n            strTime = horas + ' ' + strHoras;\n        }\n    } else {\n        strTime = minutos + ' ' + strMinutos;\n    }\n}  else {\n    strTime = tempoMinutos + ' ' + strMinutos;\n}\n\nmsg.payload = {\n    ...msg.payload,\n    'tempo_decorrido_abertura_string': strTime\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "81cb997ab6036ea6"
            ]
        ]
    },
    {
        "id": "54b24106f46dc96a",
        "type": "function",
        "z": "bed45c9821a13e16",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo abertura=' + msg.payload.tempo_decorrido_abertura + 'min, tempo limite abertura=' + msg.payload.tempo_maximo_abertura + 'min, tempo limite abertura ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "126105716a89c7a0",
        "type": "function",
        "z": "bed45c9821a13e16",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo abertura=' + msg.payload.tempo_decorrido_abertura + 'min, tempo maximo abertura=' + msg.payload.tempo_maximo_abertura + 'min, tempo limite abertura nao ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 420,
        "wires": []
    },
    {
        "id": "9b3838959c49f93a",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "guarda payload",
        "func": "let idSensor = msg.topic.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivoMsg = '/home/guioba/qualicarnes/config/.msg_sensor_' + idSensorF + '.json';\n\nmsg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': msg.topic.id_mensagem,\n    'nome_arquivo_msg': nomeArquivoMsg,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 40,
        "wires": [
            [
                "313a676242316217"
            ]
        ]
    },
    {
        "id": "3284cdeb7f45b1c1",
        "type": "json",
        "z": "851357ed231cc526",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 40,
        "wires": [
            [
                "e930f4ad75e256cb"
            ]
        ]
    },
    {
        "id": "313a676242316217",
        "type": "file in",
        "z": "851357ed231cc526",
        "name": "le dados de mensagens",
        "filename": "topic.nome_arquivo_msg",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "3284cdeb7f45b1c1"
            ]
        ]
    },
    {
        "id": "e930f4ad75e256cb",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "recupera payload",
        "func": "let dadosTopic = {};\nlet dados_mensagens = {};\nlet idMsg = msg.topic.id_mensagem;\nlet intMsg;\nlet nivMsg;\nlet qtdMaxMsg;\nlet qtdMsgAtual;\nlet idMsgSel;\n\ndadosTopic = msg.topic;\ndados_mensagens = msg.payload;\n\nfor (let i = 0; i < dados_mensagens.length; i++) {\n    if (dados_mensagens[i].id == idMsg ) {\n        intMsg = dados_mensagens[i].int;\n        nivMsg = dados_mensagens[i].niv;\n        qtdMaxMsg = dados_mensagens[i].qtdmax;\n        qtdMsgAtual = dados_mensagens[i].qtd + 1;\n        idMsgSel = i;\n    }\n}\n\nmsg.payload = {\n    ...dadosTopic,\n    'int_msg': intMsg,\n    'niv_msg': nivMsg,\n    'qtd_max_msg': qtdMaxMsg,\n    'qtd_msg_atual': qtdMsgAtual,\n    'id_msg_sel': idMsgSel,\n    dados_mensagens,\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 100,
        "wires": [
            [
                "7dbc0496e11c113d"
            ]
        ]
    },
    {
        "id": "7dbc0496e11c113d",
        "type": "switch",
        "z": "851357ed231cc526",
        "name": "qtd _msg == 1",
        "property": "payload.qtd_msg_atual",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 160,
        "wires": [
            [
                "1d4479a4c45a69bb",
                "facfa577147f8c58"
            ],
            [
                "908103d7388daded"
            ]
        ]
    },
    {
        "id": "1d4479a4c45a69bb",
        "type": "change",
        "z": "851357ed231cc526",
        "name": "prepara saida",
        "rules": [
            {
                "t": "delete",
                "p": "payload.times_mensagem",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "tempo_decorrido_mensagem",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.intervalo_mensagem",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.qtd_msg_por_dia",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "988e9d9a36a9effc",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "calcula tempo decorrido entre mensagens",
        "func": "let dadosMensagem = msg.payload.dados_mensagens;\nlet idMsgSel = msg.payload.id_msg_sel;\nlet timeAtual = new Date().getTime();\nlet milissegundos;\nlet minutos;\n\nmilissegundos = timeAtual - dadosMensagem[idMsgSel].time;\nminutos = Math.abs(Math.round(milissegundos / 60000));\n\nmsg.payload = {\n    ...msg.payload,\n    'tempo_decorrido_mensagem': minutos\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 320,
        "wires": [
            [
                "29c3ecd772d7d5bb"
            ]
        ]
    },
    {
        "id": "29c3ecd772d7d5bb",
        "type": "switch",
        "z": "851357ed231cc526",
        "name": "tempo decorrido entre mensagens >= intervalo limite entre mensagens",
        "property": "payload.tempo_decorrido_mensagem",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.int_msg",
                "vt": "msg"
            },
            {
                "t": "lt",
                "v": "payload.int_msg",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "1d4479a4c45a69bb",
                "facfa577147f8c58",
                "768292ddd31459ab"
            ],
            [
                "c7ccbee29431b717"
            ]
        ]
    },
    {
        "id": "139a1e9108db9b09",
        "type": "file",
        "z": "851357ed231cc526",
        "name": "atualiza dados de mensagens de alerta",
        "filename": "topic.nome_arquivo_msg",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 540,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "facfa577147f8c58",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "gera timespamp e atualiza qtd de mensagens",
        "func": "let timeAtual = new Date().getTime();\nlet dadosMensagens = msg.payload.dados_mensagens;\nlet idMsgSel = msg.payload.id_msg_sel;\nlet qtdMsgAtual = msg.payload.qtd_msg_atual;\n\ndadosMensagens[idMsgSel].time = timeAtual;\ndadosMensagens[idMsgSel].qtd = qtdMsgAtual;\n\nmsg.payload = dadosMensagens;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 160,
        "wires": [
            [
                "139a1e9108db9b09"
            ]
        ]
    },
    {
        "id": "908103d7388daded",
        "type": "switch",
        "z": "851357ed231cc526",
        "name": "qtd_msg <= qtd_max_msg",
        "property": "payload.qtd_msg_atual",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "payload.qtd_max_msg",
                "vt": "msg"
            },
            {
                "t": "gt",
                "v": "payload.qtd_max_msg",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 320,
        "wires": [
            [
                "988e9d9a36a9effc",
                "f42b2ff0e7288ff5"
            ],
            [
                "266558cb5679a48b"
            ]
        ]
    },
    {
        "id": "c7ccbee29431b717",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo entre msgs=' + msg.payload.tempo_decorrido_mensagem + 'min, tempo min entre msgs=' + msg.payload.int_msg + 'min, tempo min entre msgs nao atingido.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 320,
        "wires": []
    },
    {
        "id": "266558cb5679a48b",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "id_msg = 99",
        "func": "let msgErro = 'qtd msg enviadas=' + msg.payload.qtd_msg_atual + ', limite maximo msg por dia=' + msg.payload.qtd_max_msg + ', limite msg diaria ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 440,
        "wires": []
    },
    {
        "id": "f42b2ff0e7288ff5",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "id_msg = 99",
        "func": "let msgErro = 'qtd msg enviadas=' + msg.payload.qtd_msg_atual + ', limite maximo msg por dia=' + msg.payload.qtd_max_msg + ', limite msg diaria nao ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": []
    },
    {
        "id": "768292ddd31459ab",
        "type": "function",
        "z": "851357ed231cc526",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo entre msgs=' + msg.payload.tempo_decorrido_mensagem + 'min, tempo min entre msgs=' + msg.payload.int_msg + 'min, tempo min entre msgs atingido.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "965ef97ae4f805df",
        "type": "file in",
        "z": "0ec016be138128f8",
        "name": "",
        "filename": "/home/guioba/qualicarnes/config/.sensor_temperatura.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 560,
        "y": 60,
        "wires": [
            [
                "d537adc543b9da3f"
            ]
        ]
    },
    {
        "id": "d9d92d612eb06f0d",
        "type": "switch",
        "z": "0ec016be138128f8",
        "name": "seleciona sensor",
        "property": "payload.id_sensor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "topic.id_sensor",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 120,
        "wires": [
            [
                "ef9be1f350bbea38"
            ]
        ]
    },
    {
        "id": "d537adc543b9da3f",
        "type": "json",
        "z": "0ec016be138128f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 850,
        "y": 60,
        "wires": [
            [
                "44b032ad4132f237"
            ]
        ]
    },
    {
        "id": "44b032ad4132f237",
        "type": "split",
        "z": "0ec016be138128f8",
        "name": "um payload para cada sensor",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "d9d92d612eb06f0d"
            ]
        ]
    },
    {
        "id": "77cd851ebe64c7ae",
        "type": "function",
        "z": "0ec016be138128f8",
        "name": "recupera msg.payload",
        "func": "let dadosTopic = {}\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    'id_sensor': msg.payload.id_sensor,\n    'tipo_sensor': msg.payload.tipo_sensor,\n    'local_sensor': msg.payload.local_sensor\n}\n\nmsg.payload = {\n    ...dadosTopic,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4160f794af1ac427",
        "type": "function",
        "z": "0ec016be138128f8",
        "name": "guarda msg.payload",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 60,
        "wires": [
            [
                "965ef97ae4f805df"
            ]
        ]
    },
    {
        "id": "ef9be1f350bbea38",
        "type": "change",
        "z": "0ec016be138128f8",
        "name": "exclui atributos modbus",
        "rules": [
            {
                "t": "delete",
                "p": "payload.fc",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.unitid",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.address",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "77cd851ebe64c7ae"
            ]
        ]
    },
    {
        "id": "698a320dda9bf808",
        "type": "file in",
        "z": "14adb3fc7046a327",
        "name": "le dados de sensores",
        "filename": "/home/guioba/qualicarnes/config/.sensor_estado.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 420,
        "y": 60,
        "wires": [
            [
                "4fdca6e16893fd55"
            ]
        ]
    },
    {
        "id": "7d8f2d5484ada8fc",
        "type": "switch",
        "z": "14adb3fc7046a327",
        "name": "seleciona sensor",
        "property": "payload.id_sensor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "topic.id_sensor",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 120,
        "wires": [
            [
                "ad67fa0cc4d8d28c"
            ]
        ]
    },
    {
        "id": "4fdca6e16893fd55",
        "type": "json",
        "z": "14adb3fc7046a327",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 610,
        "y": 60,
        "wires": [
            [
                "886e618b654647df"
            ]
        ]
    },
    {
        "id": "886e618b654647df",
        "type": "split",
        "z": "14adb3fc7046a327",
        "name": "um payload para cada sensor",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "7d8f2d5484ada8fc"
            ]
        ]
    },
    {
        "id": "42cc80bea5ad098c",
        "type": "function",
        "z": "14adb3fc7046a327",
        "name": "recupera payload",
        "func": "let dadosTopic = {} \ndadosTopic = msg.topic;\n\nmsg.topic = {\n    'id_sensor': msg.payload.id_sensor,\n    'tipo_sensor': msg.payload.tipo_sensor,\n    'local_sensor': msg.payload.local_sensor\n}\n\nmsg.payload = {\n    ...dadosTopic,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b76b046e4653fecc",
        "type": "function",
        "z": "14adb3fc7046a327",
        "name": "guarda payload",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 60,
        "wires": [
            [
                "698a320dda9bf808"
            ]
        ]
    },
    {
        "id": "ad67fa0cc4d8d28c",
        "type": "change",
        "z": "14adb3fc7046a327",
        "name": "exclui atributos modbus",
        "rules": [
            {
                "t": "delete",
                "p": "payload.fc",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.unitid",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.address",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "42cc80bea5ad098c"
            ]
        ]
    },
    {
        "id": "ad1a6e10afb050ac",
        "type": "split",
        "z": "b0773837fc14de1b",
        "name": "um payload para cada sensor",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 60,
        "wires": [
            [
                "ba1bb78f1908e453"
            ]
        ]
    },
    {
        "id": "e22a638f379960be",
        "type": "file in",
        "z": "b0773837fc14de1b",
        "name": "",
        "filename": "/home/guioba/qualicarnes/config/.sensor_estado.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 300,
        "y": 60,
        "wires": [
            [
                "7a1bfb22c7e6c7e4"
            ]
        ]
    },
    {
        "id": "7a1bfb22c7e6c7e4",
        "type": "json",
        "z": "b0773837fc14de1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "ad1a6e10afb050ac"
            ]
        ]
    },
    {
        "id": "ba1bb78f1908e453",
        "type": "switch",
        "z": "b0773837fc14de1b",
        "name": "seleciona sensor",
        "property": "topic.id_sensor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "payload.id_sensor",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "eac3c2d753a48932"
            ]
        ]
    },
    {
        "id": "eac3c2d753a48932",
        "type": "function",
        "z": "b0773837fc14de1b",
        "name": "comando modbus",
        "func": "let dadosTopic = {};\n\ndadosTopic = msg.topic;\n\nmsg.topic = {\n    ...dadosTopic,\n    'tipo_sensor': msg.payload.tipo_sensor,\n    'local_sensor': msg.payload.local_sensor,\n    'tempo_maximo_abertura': msg.payload.tempo_maximo_abertura\n}\n\nmsg.payload = {\n    \"value\": 0,\n    \"fc\": msg.payload.fc,\n    \"unitid\": msg.payload.unitid,\n    \"address\": msg.payload.address,\n    \"quantity\": 1\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "72917c56adfba2db"
            ]
        ]
    },
    {
        "id": "72917c56adfba2db",
        "type": "modbus-flex-getter",
        "z": "b0773837fc14de1b",
        "name": "modbus leitura",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "d50a12c0d70ca353",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 640,
        "y": 120,
        "wires": [
            [
                "bc9eb8bd5fb97d5b"
            ],
            []
        ]
    },
    {
        "id": "bc9eb8bd5fb97d5b",
        "type": "function",
        "z": "b0773837fc14de1b",
        "name": "id_msg = 99",
        "func": "let leituraAtual = msg.payload[0];\nlet msgErro = 'leitura=' + leituraAtual; \n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "679f58b131b4f153",
        "type": "function",
        "z": "56c1f937ef64cc10",
        "name": "calcula tempo decorrido degelo",
        "func": "let timesUltimoDegelo = msg.payload.time_degelo;\nlet idMensagem = msg.payload.id_mensagem;\nlet timeAtual = new Date().getTime();\nlet milissegundos;\nlet minutos;\n\nmilissegundos = timeAtual - timesUltimoDegelo;\nminutos = Math.abs(Math.round(milissegundos / 60000));\n\nmsg.payload = {\n    ...msg.payload,\n    \"tempo_decorrido_degelo\": minutos\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 220,
        "wires": [
            [
                "4f27f8e6d817a5bc"
            ]
        ]
    },
    {
        "id": "4f27f8e6d817a5bc",
        "type": "switch",
        "z": "56c1f937ef64cc10",
        "name": "tempo decorrido degelo >= intervalo maximo degelo",
        "property": "payload.tempo_decorrido_degelo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.intervalo_maximo_degelo",
                "vt": "msg"
            },
            {
                "t": "lt",
                "v": "payload.intervalo_maximo_degelo",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 280,
        "wires": [
            [
                "d9da764a21827064",
                "eaae763650b9fa6f"
            ],
            [
                "f712ac8566065a0f"
            ]
        ]
    },
    {
        "id": "e0dd036c5f8d066b",
        "type": "change",
        "z": "56c1f937ef64cc10",
        "name": "prepara saida",
        "rules": [
            {
                "t": "delete",
                "p": "payload.time_degelo",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.intervalo_maximo_degelo",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c003c4492b01499d",
        "type": "json",
        "z": "56c1f937ef64cc10",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 370,
        "y": 100,
        "wires": [
            [
                "6a0091d1e5102b40"
            ]
        ]
    },
    {
        "id": "3d30452d04caf6c3",
        "type": "function",
        "z": "56c1f937ef64cc10",
        "name": "guarda payload",
        "func": "let idSensor = msg.topic.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivo = '/home/guioba/qualicarnes/config/.times_degelo_sensor_' + idSensorF + '.json';\n\nmsg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'nome_arquivo': nomeArquivo,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 40,
        "wires": [
            [
                "a084e2f12a8bf191"
            ]
        ]
    },
    {
        "id": "6a0091d1e5102b40",
        "type": "function",
        "z": "56c1f937ef64cc10",
        "name": "recupera payload",
        "func": "let dadosTopic = {} \ndadosTopic = msg.topic;\n\nmsg.payload = {\n    ...dadosTopic,\n    'time_degelo': msg.payload.time\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [
                "679f58b131b4f153"
            ]
        ]
    },
    {
        "id": "eaae763650b9fa6f",
        "type": "function",
        "z": "56c1f937ef64cc10",
        "name": "converte tempo decorrido degelo",
        "func": "let tempoMinutos = msg.payload.tempo_decorrido_degelo;\nlet minutos = 0;\nlet horas = 0;\nlet strMinutos = 'minuto';\nlet strHoras = 'hora';\nlet strTime;\n\nminutos = tempoMinutos % 60\nhoras = Math.floor(tempoMinutos / 60) \n\nif ( minutos > 1 ) {\n    strMinutos += 's';\n}\n\nif (horas > 1) {\n    strHoras += 's';\n}\n\nif ( tempoMinutos >= 60 ) {\n    if ( horas > 0) {\n        if ( minutos > 0) {\n            strTime = horas + ' ' + strHoras + ' e ' + minutos + ' ' + strMinutos;\n        } else {\n            strTime = horas + ' ' + strHoras;\n        }\n    } else {\n        strTime = minutos + ' ' + strMinutos;\n    }\n}  else {\n    strTime = tempoMinutos + ' ' + strMinutos;\n}\n\nmsg.payload = {\n    ...msg.payload,\n    'tempo_decorrido_degelo_string': strTime\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 280,
        "wires": [
            [
                "e0dd036c5f8d066b"
            ]
        ]
    },
    {
        "id": "a084e2f12a8bf191",
        "type": "file in",
        "z": "56c1f937ef64cc10",
        "name": "lê times degelo sensor",
        "filename": "topic.nome_arquivo",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 420,
        "y": 40,
        "wires": [
            [
                "c003c4492b01499d"
            ]
        ]
    },
    {
        "id": "d9da764a21827064",
        "type": "function",
        "z": "56c1f937ef64cc10",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo decorrido degelo=' + msg.payload.tempo_decorrido_degelo + 'min, intervalo max degelo=' + msg.payload.intervalo_maximo_degelo + 'min, intervalo max degelo ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 220,
        "wires": []
    },
    {
        "id": "f712ac8566065a0f",
        "type": "function",
        "z": "56c1f937ef64cc10",
        "name": "id_msg = 99",
        "func": "let msgErro = 'tempo decorrido degelo=' + msg.payload.tempo_decorrido_degelo + ', intervalo max degelo=' + msg.payload.intervalo_maximo_degelo + ', intervalo max degelo nao ultrapassado.';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 400,
        "wires": []
    },
    {
        "id": "7326a8034fa245c1",
        "type": "function",
        "z": "523d09ab802b2070",
        "name": "seleciona arquivos de log com mais de 30 dias",
        "func": "msg.payload = 'find /home/guioba/qualicarnes/log -type f -name log* -mtime +10';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 40,
        "wires": [
            [
                "bcf25f128c9b1ea7"
            ]
        ]
    },
    {
        "id": "94bc0b2376432e0f",
        "type": "split",
        "z": "523d09ab802b2070",
        "name": "um payload para cada arquivo de log",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 40,
        "wires": [
            [
                "542cf841c5aafcf5"
            ]
        ]
    },
    {
        "id": "bcf25f128c9b1ea7",
        "type": "exec",
        "z": "523d09ab802b2070",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "94bc0b2376432e0f"
            ],
            [],
            []
        ]
    },
    {
        "id": "e847c1e72d28df3d",
        "type": "function",
        "z": "523d09ab802b2070",
        "name": "monta comando para excluir os arquivos de log selecionados",
        "func": "let nomeArquivoLog = msg.payload;\n\nif (nomeArquivoLog != \"\") {\n    \n    msg.topic = {\n        'nome_arquivo_log': nomeArquivoLog\n    }\n    \n    msg.payload = 'rm ' + msg.payload;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 100,
        "wires": [
            [
                "91ee1594a4795f99"
            ]
        ]
    },
    {
        "id": "91ee1594a4795f99",
        "type": "exec",
        "z": "523d09ab802b2070",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 650,
        "y": 100,
        "wires": [
            [],
            [],
            [
                "76cd8b66bf5654c1"
            ]
        ]
    },
    {
        "id": "210a6c940c0a7a19",
        "type": "function",
        "z": "523d09ab802b2070",
        "name": "id_msg = 93",
        "func": "let nomeArquivoLog = msg.topic.nome_arquivo_log;\nmsg.topic = {\n    'id_mensagem': 93,\n    'nome_arquivo_log': nomeArquivoLog\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 100,
        "wires": []
    },
    {
        "id": "76cd8b66bf5654c1",
        "type": "switch",
        "z": "523d09ab802b2070",
        "name": "return code = 0",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 820,
        "y": 100,
        "wires": [
            [
                "210a6c940c0a7a19"
            ],
            [
                "8032d9642758ae0b"
            ]
        ]
    },
    {
        "id": "8032d9642758ae0b",
        "type": "function",
        "z": "523d09ab802b2070",
        "name": "id_msg = 94",
        "func": "let nomeArquivoLog = msg.topic.nome_arquivo_log;\nmsg.topic = {\n    'id_mensagem': 94,\n    'nome_arquivo_log': nomeArquivoLog\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 160,
        "wires": []
    },
    {
        "id": "542cf841c5aafcf5",
        "type": "switch",
        "z": "523d09ab802b2070",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 40,
        "wires": [
            [
                "440151b98e227ad6"
            ],
            [
                "e847c1e72d28df3d"
            ]
        ]
    },
    {
        "id": "440151b98e227ad6",
        "type": "function",
        "z": "523d09ab802b2070",
        "name": "id_msg = 97",
        "func": "msg.topic = {\n    'id_mensagem': 97\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 40,
        "wires": []
    },
    {
        "id": "da689e2456807269",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "comando modbus leitura do contador",
        "func": "// Efetua leitura do registrador C112\n//\nmsg.payload = {\n    value: 0, \n    'fc': 3, 'unitid': 100,\n    'address': 3696, \n    'quantity': 1\n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 280,
        "wires": [
            [
                "c524660aa6f3f0be"
            ]
        ]
    },
    {
        "id": "c524660aa6f3f0be",
        "type": "modbus-flex-getter",
        "z": "1c63e2b83121f13b",
        "name": "modbus leitura",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "75e22aefb9727a1a",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 520,
        "y": 280,
        "wires": [
            [
                "7d3d00385eb0123d"
            ],
            []
        ]
    },
    {
        "id": "7d3d00385eb0123d",
        "type": "switch",
        "z": "1c63e2b83121f13b",
        "name": "valor do contador = 0 ?",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "e526d959cc795f34"
            ]
        ]
    },
    {
        "id": "012a20e3fed8bc56",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "comando modbus liberacao do sistema",
        "func": "msg.payload = {\n    value: 1, \n    'fc': 5, \n    'unitid': 100, \n    'address': 0, \n    'quantity': 1\n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 100,
        "wires": [
            [
                "a24f2622cfd7f50e"
            ]
        ]
    },
    {
        "id": "911f11d946a9c99e",
        "type": "modbus-flex-getter",
        "z": "1c63e2b83121f13b",
        "name": "modbus leitura",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "75e22aefb9727a1a",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 560,
        "y": 40,
        "wires": [
            [
                "038d08e88eefe990"
            ],
            []
        ]
    },
    {
        "id": "a58bc43b684842e0",
        "type": "switch",
        "z": "1c63e2b83121f13b",
        "name": "valor atual != valor anterior ?",
        "property": "payload.valorAtual",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "msg.payload.valorAnterior",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 340,
        "wires": [
            [
                "a4dbb28129ddb1c6"
            ]
        ]
    },
    {
        "id": "a24f2622cfd7f50e",
        "type": "modbus-flex-write",
        "z": "1c63e2b83121f13b",
        "name": "modbus gravacao",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "75e22aefb9727a1a",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 790,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "601c0f65f9c1d16c",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "recupera indicador de liberação do sistema",
        "func": "// Recupera valor de S0 que assume os seguintes valores:\n// - true  -> Sistema Liberado\n// - false -> Sistema Inicializando\n//\nmsg.payload = {\n    value: 0, \n    'fc': 1, \n    'unitid': 100, \n    'address': 0, \n    'quantity': 1\n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 40,
        "wires": [
            [
                "911f11d946a9c99e"
            ]
        ]
    },
    {
        "id": "038d08e88eefe990",
        "type": "switch",
        "z": "1c63e2b83121f13b",
        "name": "sistema liberado ?",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "012a20e3fed8bc56"
            ],
            [
                "4584c77bfc3c7201",
                "9bc86973a41954fe"
            ]
        ]
    },
    {
        "id": "a4dbb28129ddb1c6",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "atualiza valor do contador e prepara saida",
        "func": "//Atualiza valor contador anterior com valor atual do contador\nflow.set('valorContador', msg.payload.valorAtual);\n\nmsg.topic = \"contador/sensor_01\";\n\nmsg.payload = {\n    'id_sensor': 20,\n    'local_sensor': 'Máquina de Hamburguer 01',\n    'valor_contador': msg.payload.valorAtual\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e526d959cc795f34",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "recuperavalor Anterior Contador",
        "func": "// Valor anterior do contador\nvar valorAnterior=flow.get('valorContador')||0;\nvar contador = {\n    \"valorAnterior\": valorAnterior,\n    \"valorAtual\": msg.payload[0]\n};\nmsg.payload=contador;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 340,
        "wires": [
            [
                "a58bc43b684842e0"
            ]
        ]
    },
    {
        "id": "4584c77bfc3c7201",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "recupera data anterior e data atual",
        "func": "// Valor anterior da Data do Sistema\nvar options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\nvar date = new Date();\nvar dataHoje = date.toLocaleDateString(\"pt-BR\");\nvar dataSistema = flow.get('dataSistema') || dataHoje;\n\nvar timestampAgora = date.toISOString().split('T')[0] + ' '\n    + date.toTimeString().split(' ')[0];\nvar timestampSistema = flow.get('timestampSistema') || timestampAgora;\n\nflow.set('dataSistema', dataSistema);\nflow.set('timestampSistema', timestampSistema);\n\nmsg.payload = {\n    \"dataAnterior\": dataSistema,\n    \"dataAtual\": dataHoje,\n    \"timestampAnterior\": timestampSistema,\n    \"timestampAtual\": timestampAgora,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "5dec6ebc7d3e3b4c"
            ]
        ]
    },
    {
        "id": "0b9f7e159a45e2fc",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "atualiza data do sistema e zera o contador",
        "func": "//Seta variáveis globais\n\nflow.set('dataSistema', msg.payload.dataAtual); \nflow.set('timestampSistema', msg.payload.timestampAtual); \n\n// Efetua gravação de valor 0(zero) no registrador C112\n//\nmsg.payload = {\n    value: 0, \n    'fc': 6, \n    'unitid': 100, \n    'address': 3696, \n    'quantity': 1\n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 160,
        "wires": [
            [
                "a24f2622cfd7f50e"
            ]
        ]
    },
    {
        "id": "427eaa83ecfb28a7",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "grava valor do contador no MySQL",
        "func": "var timestamp = msg.payload.timestampAnterior;\nvar valorContagem = flow.get('valorContador') || 0;\n\nmsg.topic = \"insert into contador values(DATE_ADD('\" + timestamp + \"', INTERVAL 3 HOUR), \" + valorContagem + \");\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "5dec6ebc7d3e3b4c",
        "type": "switch",
        "z": "1c63e2b83121f13b",
        "name": "mudou a data ?",
        "property": "payload.dataAtual",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "payload.dataAnterior",
                "vt": "msg"
            },
            {
                "t": "eq",
                "v": "payload.dataAnterior",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 780,
        "y": 220,
        "wires": [
            [
                "0b9f7e159a45e2fc",
                "427eaa83ecfb28a7"
            ],
            [
                "da689e2456807269"
            ]
        ]
    },
    {
        "id": "9bc86973a41954fe",
        "type": "function",
        "z": "1c63e2b83121f13b",
        "name": "comando modbus leitura do sensor magnetico",
        "func": "// Recupera valor de S0 que assume os seguintes valores:\n// - true  -> Sistema Liberado\n// - false -> Sistema Inicializando\n//\nmsg.payload = {\n    value: 0, \n    'fc': 1, \n    'unitid': 100, \n    'address': 0, \n    'quantity': 1\n} \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 220,
        "wires": [
            [
                "9e0c29be9b0c7d60"
            ]
        ]
    },
    {
        "id": "9e0c29be9b0c7d60",
        "type": "modbus-flex-getter",
        "z": "1c63e2b83121f13b",
        "name": "modbus leitura",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "75e22aefb9727a1a",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 580,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dfa3b1179f4aa110",
        "type": "file",
        "z": "5e38543dc4d6a5c8",
        "name": "atualiza dados de mensagens",
        "filename": "topic.nome_arquivo_msg",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "65ecfbcef2200d56"
            ]
        ]
    },
    {
        "id": "eb56811b96914176",
        "type": "function",
        "z": "5e38543dc4d6a5c8",
        "name": "guarda payload",
        "func": "let idSensor = msg.payload.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivoMsg = '/home/guioba/qualicarnes/config/.msg_sensor_' + idSensorF + '.json';\n\nmsg.payload.nome_arquivo = nomeArquivoMsg;\n\nmsg.topic = {\n    'id_sensor': msg.payload.id_sensor,\n    'nome_arquivo_msg': nomeArquivoMsg,\n    ...msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "1ff957a5790322d0"
            ]
        ]
    },
    {
        "id": "1ff957a5790322d0",
        "type": "file in",
        "z": "5e38543dc4d6a5c8",
        "name": "le dados de mensagens",
        "filename": "topic.nome_arquivo_msg",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 770,
        "y": 120,
        "wires": [
            [
                "6a961b96b23f6dbd"
            ]
        ]
    },
    {
        "id": "6a961b96b23f6dbd",
        "type": "json",
        "z": "5e38543dc4d6a5c8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "6dd961046535a88c"
            ]
        ]
    },
    {
        "id": "6dd961046535a88c",
        "type": "function",
        "z": "5e38543dc4d6a5c8",
        "name": "recupera payload",
        "func": "let dadosTopic = {} \n\ndadosTopic = msg.topic;\nmsg.payload = {\n    ...dadosTopic,\n    'dados_mensagem': msg.payload,\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "20f7e7bcbfbfd4f2"
            ]
        ]
    },
    {
        "id": "20f7e7bcbfbfd4f2",
        "type": "function",
        "z": "5e38543dc4d6a5c8",
        "name": "zera qtd  mensagens",
        "func": "let idSensor = msg.topic.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivoMsg = '/home/guioba/qualicarnes/config/.msg_sensor_' + idSensorF + '.json';\nlet dadosMensagem = msg.payload.dados_mensagem;\nlet obj = {};\n\nfor (var idMensagem = 0; idMensagem < dadosMensagem.length; idMensagem++) {\n\n    obj = {\n        'id': dadosMensagem[idMensagem].id,\n        'time': dadosMensagem[idMensagem].time,\n        'int': dadosMensagem[idMensagem].int,\n        'niv': dadosMensagem[idMensagem].niv,\n        'qtdmax': dadosMensagem[idMensagem].qtdmax,\n        'qtd': 0\n    }\n\n    dadosMensagem[idMensagem] = obj;\n}\n\nmsg.topic.nome_arquivo = nomeArquivoMsg;\n\nmsg.payload = dadosMensagem;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            [
                "dfa3b1179f4aa110"
            ]
        ]
    },
    {
        "id": "a7f9f971f346e2ed",
        "type": "function",
        "z": "5e38543dc4d6a5c8",
        "name": "sensores",
        "func": "msg.payload = msg.payload + 1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 120,
        "wires": [
            [
                "fb48e84f88a5f102",
                "4a9bc1e07bca6a78"
            ]
        ]
    },
    {
        "id": "fb48e84f88a5f102",
        "type": "switch",
        "z": "5e38543dc4d6a5c8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "topic",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "a7f9f971f346e2ed"
            ]
        ]
    },
    {
        "id": "4a9bc1e07bca6a78",
        "type": "function",
        "z": "5e38543dc4d6a5c8",
        "name": "idSensor",
        "func": "msg.payload = {\n    'id_sensor': msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 120,
        "wires": [
            [
                "eb56811b96914176"
            ]
        ]
    },
    {
        "id": "b20a2c84c80c2b23",
        "type": "function",
        "z": "5e38543dc4d6a5c8",
        "name": "sensores de 1 a 16",
        "func": "msg.payload = 0;\nmsg.topic = 15;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 60,
        "wires": [
            [
                "a7f9f971f346e2ed",
                "0447e4da0ba91170"
            ]
        ]
    },
    {
        "id": "65ecfbcef2200d56",
        "type": "function",
        "z": "5e38543dc4d6a5c8",
        "name": "id_msg= 96",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 96\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 240,
        "wires": []
    },
    {
        "id": "0447e4da0ba91170",
        "type": "change",
        "z": "5e38543dc4d6a5c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qtdMsgDia",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "2e3148d6532983f7",
        "type": "http request",
        "z": "6cf12492cbc96213",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 100,
        "wires": [
            [
                "f828b756a7baf86a"
            ]
        ]
    },
    {
        "id": "d6e2a2a2a96710cc",
        "type": "function",
        "z": "6cf12492cbc96213",
        "name": "id_msg = 92",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'fone': msg.topic.fone,\n    'id_mensagem': 92,\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": []
    },
    {
        "id": "384cf3caba168c7b",
        "type": "function",
        "z": "6cf12492cbc96213",
        "name": "id_msg = 91",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'fone': msg.topic.fone,\n    'id_mensagem': 91,\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 160,
        "wires": []
    },
    {
        "id": "f828b756a7baf86a",
        "type": "function",
        "z": "6cf12492cbc96213",
        "name": "verifica resposta envio",
        "func": "let resposta = msg.payload.indexOf(\"You will receive it in a few seconds\");\n\nif (resposta != -1) {\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 160,
        "wires": [
            [
                "384cf3caba168c7b"
            ],
            [
                "d6e2a2a2a96710cc"
            ]
        ]
    },
    {
        "id": "e58ff59d77951ada",
        "type": "function",
        "z": "6cf12492cbc96213",
        "name": "obtem qtd_msg_dia",
        "func": "let qtdMsgDia = global.get('qtdMsgDia') || 0;\nqtdMsgDia++;\nglobal.set('qtdMsgDia', qtdMsgDia);\n\nmsg.payload = {\n    ...msg.payload,\n    'qtd_msg_dia': qtdMsgDia  \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 40,
        "wires": [
            [
                "2e89024b217039bd"
            ]
        ]
    },
    {
        "id": "2e89024b217039bd",
        "type": "switch",
        "z": "6cf12492cbc96213",
        "name": "qtd_msg_dia <= 100 ?",
        "property": "payload.qtd_msg_dia",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "100",
                "vt": "num"
            },
            {
                "t": "lte",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 40,
        "wires": [
            [
                "a6fd95d14e3c3655"
            ],
            [
                "2e3148d6532983f7"
            ]
        ]
    },
    {
        "id": "a6fd95d14e3c3655",
        "type": "function",
        "z": "6cf12492cbc96213",
        "name": "id_msg = 95",
        "func": "msg.topic = {\n    'id_sensor': msg.topic.id_sensor,\n    'id_mensagem': 95\n}\nnode.error(\"\", msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "14f4405309a9f991",
        "type": "function",
        "z": "b941b6f4ae201e03",
        "name": "gera nome de arquivo e timestamp de abertura de porta",
        "func": "let idSensor = msg.topic.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivo = '/home/guioba/qualicarnes/config/.times_abert_sensor_' + idSensorF + '.json';\nlet timeAtual = new Date().getTime();\n\nmsg.topic = {\n    'nome_arquivo': nomeArquivo,\n}\n\nlet objTime = {\n    'time': timeAtual\n}\n\nmsg.payload = objTime;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            [
                "664d4ac442e29027"
            ]
        ]
    },
    {
        "id": "664d4ac442e29027",
        "type": "file",
        "z": "b941b6f4ae201e03",
        "name": "atualiza timestamp de abertura de porta",
        "filename": "topic.nome_arquivo",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "50244f5fbed47b47"
            ]
        ]
    },
    {
        "id": "50244f5fbed47b47",
        "type": "function",
        "z": "b941b6f4ae201e03",
        "name": "id_msg = 99",
        "func": "let msgErro = 'time abertura atualizado';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "17e87dfb9b6b24eb",
        "type": "function",
        "z": "b98a8e718342971b",
        "name": "gera nome de arquivo e timestamp de degelo",
        "func": "let idSensor = msg.topic.id_sensor + '';\nlet idSensorF = (idSensor.length == 1) ? '0' + idSensor : idSensor;\nlet nomeArquivo = '/home/guioba/qualicarnes/config/.times_degelo_sensor_' + idSensorF + '.json';\nlet timeAtual = new Date().getTime();\n\nmsg.topic = {\n    'nome_arquivo': nomeArquivo,\n}\n\nlet objTime = {\n    'time': timeAtual\n}\n\nmsg.payload = objTime;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "58fb33d3739927b5"
            ]
        ]
    },
    {
        "id": "58fb33d3739927b5",
        "type": "file",
        "z": "b98a8e718342971b",
        "name": "atualiza time degelo sensor",
        "filename": "topic.nome_arquivo",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "5349b481f8021a60"
            ]
        ]
    },
    {
        "id": "5349b481f8021a60",
        "type": "function",
        "z": "b98a8e718342971b",
        "name": "id_msg = 99",
        "func": "let msgErro = 'time degelo atualizado';\n\nmsg.topic.id_mensagem = 99;\nnode.error(msgErro, msg);\nreturn msg",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "9fd63093eea78bc1",
        "type": "subflow:5df8b89e0aa366e4",
        "z": "175e45cc065c1dbf",
        "name": "",
        "x": 990,
        "y": 320,
        "wires": [
            [
                "266ae1f4b76150f4"
            ]
        ]
    },
    {
        "id": "34972fe59f768f28",
        "type": "subflow:a56eeb4f457b4c51",
        "z": "175e45cc065c1dbf",
        "name": "",
        "x": 970,
        "y": 780,
        "wires": [
            [
                "266ae1f4b76150f4"
            ]
        ]
    },
    {
        "id": "266ae1f4b76150f4",
        "type": "mqtt out",
        "z": "175e45cc065c1dbf",
        "name": "AWS Mqtt Qualicarnes",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "69ba5e36ae0a71cf",
        "x": 1020,
        "y": 540,
        "wires": []
    },
    {
        "id": "90c75fdb80c86235",
        "type": "subflow:523d09ab802b2070",
        "z": "175e45cc065c1dbf",
        "name": "",
        "x": 410,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4dc3441121690eb3",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "916844c5acc448ce"
            ]
        ]
    },
    {
        "id": "3937908b5ee6162a",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 100,
        "wires": [
            [
                "0e4b79be15e2943c"
            ]
        ]
    },
    {
        "id": "1c00fd95986e32f2",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 160,
        "wires": [
            [
                "1e5284177fe767d4"
            ]
        ]
    },
    {
        "id": "c9579065672fe441",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "40",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "38124a7a1e4c0b1f"
            ]
        ]
    },
    {
        "id": "a99db35473416459",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "intervalo 10min",
        "props": [],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "1c00fd95986e32f2",
                "3937908b5ee6162a",
                "4dc3441121690eb3",
                "c9579065672fe441",
                "46204579679b06e8",
                "87f789da530de150",
                "cf1caa6ed20fbd1d",
                "54437a0a869b6c68",
                "89ab7330d180f8f4",
                "45eb4efb38c6309f"
            ]
        ]
    },
    {
        "id": "bebf38fb5a514461",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "intervalo 1min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 760,
        "wires": [
            [
                "bab749b2efa6786f",
                "235f12c3eceb5da8",
                "99e786572e4234d9",
                "ac7518102eb8085d",
                "cbf3c2710f33fbcf",
                "9cb64b5ddc0f327b"
            ]
        ]
    },
    {
        "id": "bab749b2efa6786f",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 640,
        "wires": [
            [
                "5b27a0a180fad7b8"
            ]
        ]
    },
    {
        "id": "235f12c3eceb5da8",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "14",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 700,
        "wires": [
            [
                "89574d47be55bc28"
            ]
        ]
    },
    {
        "id": "99e786572e4234d9",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "21",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 760,
        "wires": [
            [
                "88543bd6e6c229eb"
            ]
        ]
    },
    {
        "id": "ac7518102eb8085d",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "28",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "bae73f4852b4117d"
            ]
        ]
    },
    {
        "id": "cbf3c2710f33fbcf",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "35",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 880,
        "wires": [
            [
                "aeb7d80891428635"
            ]
        ]
    },
    {
        "id": "46204579679b06e8",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 280,
        "wires": [
            [
                "8adaf8f4d6e25e4f"
            ]
        ]
    },
    {
        "id": "9cb64b5ddc0f327b",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "42",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 940,
        "wires": [
            [
                "5e3d291e98c0afa1"
            ]
        ]
    },
    {
        "id": "c71f5198fbcb9b2f",
        "type": "subflow:5e38543dc4d6a5c8",
        "z": "175e45cc065c1dbf",
        "name": "",
        "x": 420,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bf5551b7273c1382",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "intervalo 1dia",
        "props": [],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "90c75fdb80c86235",
                "c71f5198fbcb9b2f"
            ]
        ]
    },
    {
        "id": "c5473bde5cfd7236",
        "type": "catch",
        "z": "175e45cc065c1dbf",
        "name": "erro fluxo",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 1420,
        "wires": [
            [
                "55c834d6401158e8"
            ]
        ]
    },
    {
        "id": "55c834d6401158e8",
        "type": "subflow:2722588f55eaad40",
        "z": "175e45cc065c1dbf",
        "name": "",
        "x": 250,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c3f771faf3539ad6",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "log detalhado temperatura",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 1120,
        "wires": [
            [
                "a20fc637ed906116"
            ]
        ]
    },
    {
        "id": "a20fc637ed906116",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "execLogDetalhadoTemperatura=true",
        "rules": [
            {
                "t": "set",
                "p": "execLogDetalhadoTemperatura",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1120,
        "wires": [
            [
                "df98e7f5a538dbef"
            ]
        ]
    },
    {
        "id": "19b73940e9c9ad65",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "execLogDetalhadoTemperatura=false",
        "rules": [
            {
                "t": "set",
                "p": "execLogDetalhadoTemperatura",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1180,
        "wires": [
            [
                "df98e7f5a538dbef"
            ]
        ]
    },
    {
        "id": "5650fff3922b0867",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "log normal temperatura",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "19b73940e9c9ad65"
            ]
        ]
    },
    {
        "id": "dd10c935555e8e8c",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "log detalhado estado",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 1240,
        "wires": [
            [
                "f39f1b2f19b9dceb"
            ]
        ]
    },
    {
        "id": "f39f1b2f19b9dceb",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "execLogDetalhadoEstado=true",
        "rules": [
            {
                "t": "set",
                "p": "execLogDetalhadoEstado",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1240,
        "wires": [
            [
                "df98e7f5a538dbef"
            ]
        ]
    },
    {
        "id": "f4cf9ff104bcb201",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "execLogDetalhadoEstado=false",
        "rules": [
            {
                "t": "set",
                "p": "execLogDetalhadoEstado",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1300,
        "wires": [
            [
                "df98e7f5a538dbef"
            ]
        ]
    },
    {
        "id": "930d818c79b0cc2b",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "log normal estado",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 1300,
        "wires": [
            [
                "f4cf9ff104bcb201"
            ]
        ]
    },
    {
        "id": "916844c5acc448ce",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "tunel congelamento id=1",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "0e4b79be15e2943c",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "congelamento produto acabado id=2",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "1e5284177fe767d4",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "saida produto acabado id=3",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 160,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "38124a7a1e4c0b1f",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "congelamento materia prima id=4",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 220,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "8adaf8f4d6e25e4f",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "area de manipulacao id=5",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "5",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 280,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "5b27a0a180fad7b8",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "janela congelamento materia prima id=6",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "6",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 640,
        "wires": [
            [
                "34972fe59f768f28"
            ]
        ]
    },
    {
        "id": "89574d47be55bc28",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "porta congelamento materia prima id=7",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "7",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 700,
        "wires": [
            [
                "34972fe59f768f28"
            ]
        ]
    },
    {
        "id": "88543bd6e6c229eb",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "porta saida produto acabado id=8",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "8",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 760,
        "wires": [
            [
                "34972fe59f768f28"
            ]
        ]
    },
    {
        "id": "bae73f4852b4117d",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "janela saida produto acabado id=9",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "9",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 820,
        "wires": [
            [
                "34972fe59f768f28"
            ]
        ]
    },
    {
        "id": "aeb7d80891428635",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "porta congelamento produto acabado id=10",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "10",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 880,
        "wires": [
            [
                "34972fe59f768f28"
            ]
        ]
    },
    {
        "id": "5e3d291e98c0afa1",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "porta tunel congelamento id=11",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "11",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 940,
        "wires": [
            [
                "34972fe59f768f28"
            ]
        ]
    },
    {
        "id": "7459a42c31918320",
        "type": "debug",
        "z": "175e45cc065c1dbf",
        "name": "status log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.status_log",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1420,
        "wires": []
    },
    {
        "id": "df98e7f5a538dbef",
        "type": "function",
        "z": "175e45cc065c1dbf",
        "name": "verifica status",
        "func": "let logDetalhadoTemperatura = global.get('execLogDetalhadoTemperatura')||false;\nlet logDetalhadoEstado = global.get('execLogDetalhadoEstado') || false;\nlet statusLog;\n\nif (logDetalhadoTemperatura == true) {\n    statusLog = 'log detalhado temperatura';\n} else {\n     statusLog =  'log normal temperatura';\n} \n\nif (logDetalhadoEstado == true) {\n    statusLog += ' / log detalhado estado';\n} else {\n    statusLog +=  ' / log normal estado';\n} \n\nmsg.payload = {\n    'status_log': statusLog\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1360,
        "wires": [
            [
                "7459a42c31918320"
            ]
        ]
    },
    {
        "id": "641b3894de91acb6",
        "type": "inject",
        "z": "175e45cc065c1dbf",
        "name": "status log",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1360,
        "wires": [
            [
                "df98e7f5a538dbef"
            ]
        ]
    },
    {
        "id": "87f789da530de150",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 340,
        "wires": [
            [
                "d59e0947e9836ccb"
            ]
        ]
    },
    {
        "id": "cf1caa6ed20fbd1d",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "25",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 400,
        "wires": [
            [
                "43ed5783f7157d76"
            ]
        ]
    },
    {
        "id": "54437a0a869b6c68",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "35",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 460,
        "wires": [
            [
                "65e5a1a283940dbb"
            ]
        ]
    },
    {
        "id": "89ab7330d180f8f4",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "45",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 520,
        "wires": [
            [
                "51018ab61412ca24"
            ]
        ]
    },
    {
        "id": "45eb4efb38c6309f",
        "type": "delay",
        "z": "175e45cc065c1dbf",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "55",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 580,
        "wires": [
            [
                "72f656a3e5317c5e"
            ]
        ]
    },
    {
        "id": "d59e0947e9836ccb",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "tunel congelamento-degelo id=12",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "12",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 340,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "43ed5783f7157d76",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "congelamento produto acabado-degelo id=13",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "13",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 400,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "65e5a1a283940dbb",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "saida produto acabado-degelo id=14",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "14",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "51018ab61412ca24",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "congelamento materia prima-degelo id=15",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "15",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 520,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "72f656a3e5317c5e",
        "type": "change",
        "z": "175e45cc065c1dbf",
        "name": "area de manipulacao-degelo id=16",
        "rules": [
            {
                "t": "set",
                "p": "topic.id_sensor",
                "pt": "msg",
                "to": "16",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 580,
        "wires": [
            [
                "9fd63093eea78bc1"
            ]
        ]
    },
    {
        "id": "f0df8db632a11c1c",
        "type": "function",
        "z": "0989bce539abecb2",
        "name": "function 1",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    }
]